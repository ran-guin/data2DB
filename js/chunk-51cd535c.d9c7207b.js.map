{"version":3,"sources":["webpack:///./node_modules/scatter-plot-d3/dist/index.js","webpack:///./lib/Test.vue?e6a6","webpack:///lib/Test.vue","webpack:///./lib/Test.vue?b9fc","webpack:///./lib/Test.vue"],"names":["checkDefaults","options","set","setOptions","console","log","JSON","stringify","addScatter","svg","this","initSvg","data","color","scatter","selectAll","enter","append","ptSize","map","d","xCol","scaleX","yCol","scaleY","attr","leftMargin","height","bottomMargin","i","on","transition","duration","style","addAxis","addLabels","line","curve","addLine","embedData","records","length","max","maxValue","fontSize","dataWidth","text","xaxis","yaxis","x","domain","range","maxX","call","dataHeight","topMargin","y","maxY","render","_vm","_h","$createElement","_c","_self","attrs","model","value","callback","$$v","thickness","expression","spacing","_v","_s","staticClass","$event","testPlot","loadData","staticStyle","staticRenderFns","component","VBtn","VCard","VCardText","VContainer","VTextField"],"mappings":"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","file":"js/chunk-51cd535c.d9c7207b.js","sourcesContent":["import * as d3 from 'd3';\nimport d3Svg from 'svg-d3';\n\nfunction checkDefaults(options) {\n  const set = d3Svg.setOptions('bar', options);\n  console.log('default settings: ' + JSON.stringify(set));\n  return set;\n}\n\nfunction addScatter(options) {\n  console.log('add scatter chart: ' + JSON.stringify(options));\n  var svg = options.svg || this.initSvg(options);\n  var data = options.data; // eg [{fname: 'Peter', state: 'BC', age: 41}, {fname: 'Paul', state: 'Alberta', age: 33}, {fname: 'Mary', state: 'Ontario', age: 27}]\n\n  const set = d3Svg.setOptions('scatter', options);\n  console.log('default settings: ' + JSON.stringify(set)); // var radius = options.radius || Math.min(set.width, set.height) / 4\n\n  console.log('add data ' + JSON.stringify(data));\n  var color = set.color || d3.scaleOrdinal(d3.schemeDark2); // var scatter = svg\n  //   .data(data)\n  //   .enter()\n  //   .append(\"rect\")\n\n  var scatter = svg.selectAll(\".myScatter\").data(data).enter().append(\"rect\");\n  console.log('Scatter: ' + JSON.stringify(data));\n  var ptSize = set.ptSize || 4;\n  data.map(d => {\n    console.log('X: ' + set.xCol + ': ' + d[set.xCol] + ' x ' + set.scaleX + ' = ' + d[set.xCol] * set.scaleX);\n    console.log('Y: ' + set.yCol + ': ' + d[set.yCol] + ' x ' + set.scaleY + ' = ' + d[set.yCol] * set.scaleY);\n  });\n  scatter.attr('x', d => set.leftMargin + d[set.xCol] * set.scaleX - ptSize / 2).attr('y', d => set.height - set.bottomMargin - d[set.yCol] * set.scaleY - ptSize / 2).attr('height', ptSize).attr('width', ptSize).attr('fill', (d, i) => color(i));\n  scatter.on(\"mouseenter\", function () {\n    d3.select(this).transition().duration(200).attr(\"opacity\", 0.5);\n    d3.select('#xAxis') // Testing .. not accessing this element (?)\n    .style('color', 'red');\n  }).on(\"mouseout\", function () {\n    d3.select(this).transition().duration(200).attr(\"opacity\", 1);\n  });\n  console.log('added data'); // scatter\n  //   .attr('x', 200)\n  //   .attr('y', 200)\n  //   .attr('height', 10)\n  //   .attr('width', 10)\n  //   .attr(\"fill\", (d, i) => color(i))\n  //       .attr(\"d\", arc)\n  //       .attr(\"fill\", (d, i) => color(i))\n  //       .attr(\"stroke\", set.stroke)\n  //       .attr(\"stroke-ypos\", \"1px\")\n  //       .on(\"mouseenter\", function(d) {\n  //         d3.select(this)\n  //           .transition()\n  //           .duration(200)\n  //           .attr(\"opacity\", 0.5);\n  //         d3.select('#Legend' + d[set.labelCol]) // NOT WORKING (?)\n  //           .transition()\n  //           .duration(200)\n  //           .attr(\"opacity\", 0.5);\n  //       })\n  //       .on(\"mouseout\", function(d) {\n  //         d3.select(this)\n  //           .transition()\n  //           .duration(200)\n  //           .attr(\"opacity\", 1);\n  //         d3.select('#Legend' + d[set.labelCol]) // NOT WORKING (?)\n  //           .transition()\n  //           .duration(200)\n  //           .attr(\"opacity\", 1);\n  //       });\n  // options.radius = radius\n\n  this.addAxis(options);\n  this.addLabels(options);\n\n  if (options.line || options.curve) {\n    this.addLine(options);\n  }\n\n  if (options.embedData) {\n    console.log('embed data into element: ' + options.embedData);\n    d3Svg.embedData(data, options.embedData);\n  } // console.log('drew pie')\n\n\n  return {\n    records: data.length,\n    max: set.maxValue\n  };\n}\n\nfunction addLine(options) {\n  var svg = options.svg;\n  var data = options.data;\n  var set = d3Svg.setOptions('scatter', options);\n  var sorted = data.sort((a, b) => {\n    return parseFloat(a[set.xCol]) - parseFloat(b[set.xCol]);\n  });\n  var ptSize = set.ptSize || 5;\n  var color = set.color || 'green';\n  var Gen = d3.line().x(d => set.leftMargin + d[set.xCol] * set.scaleX).y(d => set.height - set.bottomMargin - d[set.yCol] * set.scaleY);\n\n  if (options.curve) {\n    Gen.curve(d3.curveBasis);\n  }\n\n  svg.append(\"path\").attr(\"d\", Gen(sorted)).attr(\"fill\", \"none\").attr(\"stroke\", color);\n}\n\nfunction addLabels(options) {\n  var set = d3Svg.setOptions('pie', options); // uses bar options for spacing \n\n  var svg = options.svg;\n  var data = options.data; // const labels = \n\n  svg.selectAll('text').data(data).enter().append('text').style('font-size', set.fontSize + 'px'); //   if (set.labelPosition === 'outside' ) {\n  //     labels.style('text-anchor', function(d) {\n  //       // are we past the center?\n  //       return (d.endAngle + d.startAngle)/2 > Math.PI ?\n  //           \"end\" : \"start\";\n  //     })\n  //     .attr('transform', d => `translate(${arcLabel.centroid(d)[0] + set.width/2}, ${arcLabel.centroid(d)[1] + set.height/2 + set.fontSize})`)\n  //   } else if (set.labelPosition === 'inside') {\n  //     labels.style('text-anchor','middle')\n  //     .attr('transform', d => `translate(${arcLabel.centroid(d)[0] + set.width/2}, ${arcLabel.centroid(d)[1] + set.height/2 + set.fontSize})`)\n  //   } else if (set.labelPosition === 'legend') {\n  //     labels.style('text-anchor','start')\n  //     .attr('transform', (d, i) => \"translate(\" + (labelPos + set.fontSize * 2) + \",\" + (labelPos + i*set.fontSize*2) + \")\")\n  //   }\n  //   labels.style('alignment-baseline', 'middle')\n  //   labels.append('tspan')\n  //     .attr('y', '-0.6em')\n  //     .attr('x', 0)\n  //     .style('font-weight', 'bold')\n  //     .style('font-size', set.fontSize + 'px')\n  //     .text((d,i) => `${data[i][set.labelCol]}`)\n  //   if (set.labelPosition === 'legend') {\n  //     svg.selectAll(\".myLegend\")\n  //       .data(data)\n  //       .enter()\n  //       .append(\"rect\")\n  //         .attr('id', (d) => `${\"Legend\" + d[set.labelCol]}`)\n  //         .attr('x', labelPos)\n  //         .attr('y', (d,i) => `${labelPos + i*set.fontSize*2 - set.fontSize - set.fontSize/2}` )  // - 23\n  //         .attr('height', set.fontSize)\n  //         .attr('width', set.fontSize)\n  //         .attr('fill', (d, i) => color(i))\n  //   }\n  //   d3Svg.addRectangle({svg: svg, x: labelPos*2, y: labelPos*2, width: set.spacing*2, height: set.spacing*2, colour: 'red'})\n  //   data.map(a => {\n  //     console.log(set.labelCol + ' data labels: ' + a[set.labelCol])\n  //   })\n  //   return {options: options, valueColumn: set.valueCol, labelColumn: set.labelCol}\n}\n\nfunction addAxis(options) {\n  console.log('add axis: ' + JSON.stringify(options));\n  var svg = options.svg || this.initSvg(options);\n  var data = options.data;\n  var set = d3Svg.setOptions('scatter', options); // uses bar options for spacing \n\n  svg.append('text').attr('id', 'xAxis').attr('x', set.dataWidth / 2).attr('y', set.height - set.fontSize).text(options.xaxis).style('font-weight', 'bold');\n  svg.append('text').attr('id', 'yAxis').attr('y', set.fontSize).attr('x', -set.height / 2).attr(\"transform\", \"rotate(-90)\").style(\"text-anchor\", \"middle\").text(options.yaxis).style('font-weight', 'bold'); // var x = d3.scaleTime()  // dates ... \n\n  const x = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n    return +d[set.xCol];\n  })]).range([set.leftMargin, set.leftMargin + set.maxX * set.scaleX]);\n  svg.append(\"g\").call(d3.axisBottom(x)).attr(\"transform\", \"translate(0,\" + (set.dataHeight + set.topMargin) + \")\");\n  const y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n    return +d[set.yCol];\n  })]).range([set.height - set.bottomMargin, set.height - set.bottomMargin - set.maxY * set.scaleY]);\n  svg.append(\"g\").call(d3.axisLeft(y)).attr(\"transform\", \"translate(\" + set.leftMargin + \", 0)\");\n  return true;\n}\n\nexport default {\n  checkDefaults,\n  addScatter,\n  addLabels,\n  addAxis\n};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-card',[_c('v-card-text',[_c('v-text-field',{attrs:{\"label\":\"Thickness\"},model:{value:(_vm.thickness),callback:function ($$v) {_vm.thickness=$$v},expression:\"thickness\"}}),_c('v-text-field',{attrs:{\"label\":\"Spacing\"},model:{value:(_vm.spacing),callback:function ($$v) {_vm.spacing=$$v},expression:\"spacing\"}}),(!_vm.data || !_vm.data.length)?_c('div',[_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){return _vm.loadData(\"simple\")}}},[_vm._v(\"Simple Array\")])],1),_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){return _vm.loadData(\"gdp\")}}},[_vm._v(\"GDP Data\")])],1),_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){return _vm.loadData(\"excel\")}}},[_vm._v(\"Excel Data\")])],1),_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){return _vm.loadData(\"json\")}}},[_vm._v(\"JSON Data\")])],1)]):_c('div',[_c('h3',[_vm._v(_vm._s(_vm.data.length)+\" + Records loaded\")]),_c('h6',[_vm._v(_vm._s(_vm.data))]),_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){return _vm.testPlot(\"test\")}}},[_vm._v(\"Test svg\")])],1),_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){return _vm.testPlot(\"pie chart\")}}},[_vm._v(\"Pie Chart\")])],1),_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){return _vm.testPlot(\"horizontal bar chart\")}}},[_vm._v(\"Horizontal Bar Chart\")])],1),_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){return _vm.testPlot(\"vertical bar chart\")}}},[_vm._v(\"Vertical Bar Graph\")])],1),_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){return _vm.testPlot(\"scatter\")}}},[_vm._v(\"Scatter\")])],1),_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){return _vm.testPlot(\"line\")}}},[_vm._v(\"Line\")])],1),_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){return _vm.testPlot(\"bar\")}}},[_vm._v(\"Test Plot\")])],1),_c('p',[_c('v-btn',{staticClass:\"btn-primary\",on:{\"click\":function($event){_vm.data = []}}},[_vm._v(\"Clear Data\")])],1)]),_c('hr'),_c('p'),_c('v-container',{staticStyle:{\"border\":\"1px solid black\"}},[_c('h3',[_vm._v(\"Canvas\")]),_c('div',{staticClass:\"canvas\",attrs:{\"id\":\"d3Canvas\"}})])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang='pug'>\n  div\n    v-card\n      v-card-text\n        v-text-field(v-model='thickness' label='Thickness')\n        v-text-field(v-model='spacing' label='Spacing')\n        \n        div(v-if='!data || !data.length')\n          p\n            v-btn.btn-primary(@click='loadData(\"simple\")') Simple Array\n          p\n            v-btn.btn-primary(@click='loadData(\"gdp\")') GDP Data\n          p\n            v-btn.btn-primary(@click='loadData(\"excel\")') Excel Data\n          p\n            v-btn.btn-primary(@click='loadData(\"json\")') JSON Data\n        div(v-else)\n          h3 {{data.length}} + Records loaded\n          h6 {{data}}\n          p\n            v-btn.btn-primary(@click='testPlot(\"test\")') Test svg\n          p\n            v-btn.btn-primary(@click='testPlot(\"pie chart\")') Pie Chart\n          p\n            v-btn.btn-primary(@click='testPlot(\"horizontal bar chart\")') Horizontal Bar Chart\n          p\n            v-btn.btn-primary(@click='testPlot(\"vertical bar chart\")') Vertical Bar Graph\n          p\n            v-btn.btn-primary(@click='testPlot(\"scatter\")') Scatter\n          p\n            v-btn.btn-primary(@click='testPlot(\"line\")') Line\n          p\n            v-btn.btn-primary(@click='testPlot(\"bar\")') Test Plot\n          p\n            v-btn.btn-primary(@click='data = []') Clear Data\n        hr\n        p &nbsp;\n        v-container(style='border: 1px solid black')\n          h3 Canvas\n          div#d3Canvas.canvas   \n</template>\n\n<script>\n  import d3Svg from 'svg-d3'\n  import d3Bar from 'bar-plot-d3'\n  import d3Pie from 'pie-chart-d3'\n  import d3Scatter from 'scatter-plot-d3'\n\n  import d3Data from 'd3-data-prep'\n  import d3Parse from 'd3-data-parser'\n\n  export default {\n    name: 'Test',\n    data () {\n      return {\n        options: '',\n        title: 'Use this app to upload data from an Excel Spreadsheet and parse into Database format',\n        result: null,\n        string: '',\n        showRaw: false,\n        rawData: '',\n        svg: null,\n\n        thickness: 40,\n        spacing: 5,\n\n        data: [],\n        formatted: [],\n        reformatted: [],\n        headers: []\n      }\n    },\n    props: {\n      msg: {\n        type: String\n      }\n    },\n    computed: {\n      Dataset: function () {\n        return this.$store.state.hash || {}\n      }\n    },\n    methods: {\n      loadData (type) {\n        if (type === 'gdp') {\n          this.data = [\n              { \"country\": \"USA\", \"gdp\": 20.5 },\n              { \"country\": \"China\", \"gdp\": 13.4 },\n              { \"country\": \"Germany\", \"gdp\": 4 },\n              { \"country\": \"Japan\", \"gdp\": 4.9 },\n              { \"country\": \"France\", \"gdp\": 2.8  }\n          ]\n          this.formatted = [\n              { \"country\": \"USA\", \"gdp\": 20.5 },\n              { \"country\": \"China\", \"gdp\": 13.4 },\n              { \"country\": \"Germany\", \"gdp\": 4 },\n              { \"country\": \"Japan\", \"gdp\": 4.9 },\n              { \"country\": \"France\", \"gdp\": 2.8  }\n          ]\n          this.headers = [\n            {text: 'Country', value: 'country'},\n            {text: 'GDP', value: 'gdp'}\n          ]\n          this.scale = 10\n\n        } else if (type === 'simple') {\n          this.data = [21, 90, 32, 59, 200, 36, 1, 32, 59]\n          this.formatted = [\n            {Population: 21},\n            {Population: 90},\n            {Population: 32},\n            {Population: 59},\n            {Population: 200},\n            {Population: 36},\n            {Population: 1},\n            {Population: 32},\n            {Population: 59}\n          ]\n          this.headers = ['Population']\n          this.scale = 1\n        } else if (type === 'json') {\n\n          console.log('simulate json data...')\n          var raw = [\n            {continent: \"Asia\", country: \"Korea\", gdp: 55, population: 50},\n            {continent: \"Asia\", country: \"China\", gdp: 127, population: 1400},\n            {continent: \"Asia\", country: \"Singapore\", gdp: 77, population: 12},\n            {continent: \"N America\", country: \"USA\", gdp: 111, population: 340},\n            {continent: \"N America\", country: \"Canada\", gdp: 45, population: 32},\n            {continent: \"N America\", country: \"Mexico\", gdp: 111, population: 480},\n            {continent: \"S America\", country: \"Brazil\", gdp: 64, population: 630},\n            {continent: \"S America\", country: \"Argentina\", gdp: 29, population: 29},\n            {continent: \"S America\", country: \"Colombia\", gdp: 36, population: 45},\n            {continent: \"Europe\", country: \"Germany\", gdp: 49, population: 27},\n            {continent: \"Europe\", country: \"France\", gdp: 39, population: 24},\n            {continent: \"Europe\", country: \"Netherlands\", gdp: 34, population: 19},\n            {continent: \"Europe\", country: \"UK\", gdp: 45, population: 26}\n          ]\n\n          console.log(\"JSON: \" + JSON.stringify(raw))\n\n          d3Parse.loadRaw(JSON.stringify(raw), 'JSON')\n          .then( dataset => {\n            console.log(\"reformatted to: \" + JSON.stringify(dataset))\n            this.$store.dispatch('setHash', dataset)\n          })\n          .catch( err => {\n            console.log(\"Error: \" + err.message)\n          })\n        } else if (type === 'excel') {\n          this.data = [\n            ['George', 42, 'S'],\n            ['John', 45, 'M'],\n            ['Paul', 49, 'M'],\n            ['Ringo', 55, 'S']\n          ]\n          this.formatted = [\n            {name: 'George', age: 42, status: 'S'},\n            {name: 'John', age: 45, status: 'M'},\n            {name: 'Paul', age: 49, status: 'M'},\n            {name: 'Ringo', age: 55, status: 'S'}\n          ]\n          this.headers = [\n            {text: 'Name', value: 'name'},\n            {text: 'Age', value: 'age'},\n            {text: 'Status', value: 'status'}\n          ]        \n          this.scale = 10\n        } else {\n          console.log(type + ' data not defined...')\n        }\n\n        var reformatted = d3Data.formatData(this.data, this.headers)\n        this.reformatted = reformatted.data\n        // this.headers = reformatted.headers\n        // console.log(\"ORIGINAL: \" + JSON.stringify(this.data))\n        // console.log(\"EXPECTED: \" + JSON.stringify(this.formatted))\n        // console.log(\"REFORMAT: \" + JSON.stringify(this.reformatted))\n        // console.log(\"HEADERS: \" + JSON.stringify(this.headers))\n      },\n      testPlot (type) {\n        // var svg = d3Helper.initSvg({clear: true, canvasHeight: 600, canvasWidth: 900})\n        var svg = d3Svg.initSvg({clear: true, canvasHeight: 600, canvasWidth: 900})\n        this.svg = svg\n\n        if (type === 'test') {\n          console.log('run test')\n          d3Bar.testSvg({svg: svg})\n        } else if (type === 'pie chart') {\n          console.log('generate pie chart')\n\n          const size = d3Pie.addPie({\n          // const size = d3Helper.addBars({\n            svg: svg,\n            data: this.reformatted,\n            headers: this.headers,\n            xoffset: 200,\n            yoffset: 200,\n            scale: this.scale\n          })\n\n          console.log('generated pie chart: ' + JSON.stringify(size))\n\n          // d3Helper.resize({id: '#d3Canvas', width: size.maxWidth, height: size.fullHeight})\n          // d3Svg.resize({id: '#d3Canvas', width: size.fullWidth, height: size.fullHeight})\n        } else if (type === 'horizontal bar chart') {\n          console.log('generate bars')\n\n          const size = d3Bar.addBars({\n          // const size = d3Helper.addBars({\n            svg: svg,\n            data: this.reformatted,\n            headers: this.headers,\n            xoffset: 20,\n            spacing: Number(this.spacing),\n            thickness: Number(this.thickness),\n            orientation: 'horizontal',\n            xaxis: 'custom x axis label',\n            yaxis: 'custom y axis label',\n            scale: this.scale\n          })\n\n          console.log('generated bar chart: ' + JSON.stringify(size))\n\n          // d3Helper.resize({id: '#d3Canvas', width: size.maxWidth, height: size.fullHeight})\n          d3Svg.resize({id: '#d3Canvas', width: size.fullWidth, height: size.fullHeight})\n        } else if (type === 'vertical bar chart') {\n          console.log('generate bars')\n\n          // const size = d3Helper.addBars({\n          const size = d3Bar.addBars({\n            svg: svg,\n            data: this.reformatted,\n            headers: this.headers,\n            xaxis: 'custom x axis label',\n            yaxis: 'custom y axis label',\n            xoffset: 20,\n            spacing: Number(this.spacing),\n            thickness: Number(this.thickness),\n            scale: this.scale\n          })\n\n          console.log('generated horizontal bar chart: ' + JSON.stringify(size))\n\n          // d3Helper.resize({id: '#d3Canvas', width: size.maxWidth, height: size.fullHeight})\n          d3Svg.resize({id: '#d3Canvas', width: size.fullWidth, height: size.fullHeight})\n        } else if (type === 'scatter') {\n          console.log('generate scatter plot for ' + JSON.stringify(this.reformatted))\n\n          // const size = d3Helper.addBars({\n          const size = d3Scatter.addScatter({\n            svg: svg,\n            data: this.reformatted,\n            headers: this.headers,\n            xaxis: 'custom x axis label',\n            yaxis: 'custom y axis label',\n          })\n\n          console.log('generated scatter chart: ' + JSON.stringify(size))\n\n          // d3Helper.resize({id: '#d3Canvas', width: size.maxWidth, height: size.fullHeight})\n          d3Svg.resize({id: '#d3Canvas', width: size.fullWidth, height: size.fullHeight})\n        // } else if (type === 'line chart') {\n        //   console.log('generate line chart')\n\n        //   // const size = d3Helper.addBars({\n        //   const size = d3Bar.addBars({\n        //     svg: svg,\n        //     data: this.reformatted,\n        //     headers: this.headers,\n        //     xaxis: 'custom x axis label',\n        //     yaxis: 'custom y axis label',\n        //     xoffset: 20,\n        //     spacing: Number(this.spacing),\n        //     thickness: Number(this.thickness),\n        //     scale: this.scale\n        //   })\n\n        //   console.log('generated bar chart: ' + JSON.stringify(size))\n\n        //   // d3Helper.resize({id: '#d3Canvas', width: size.maxWidth, height: size.fullHeight})\n        //   d3Svg.resize({id: '#d3Canvas', width: size.fullWidth, height: size.fullHeight})\n        }\n\n      }\n    },\n    watch: {\n      Dataset () {\n        console.log('Dataset modified...' + this.options)\n        if (this.Dataset.original) {\n          this.options++\n          console.log('reset option to data')\n        }\n      }\n    }\n  }\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Test.vue?vue&type=template&id=51b693a0&lang=pug&\"\nimport script from \"./Test.vue?vue&type=script&lang=js&\"\nexport * from \"./Test.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VCard,VCardText,VContainer,VTextField})\n"],"sourceRoot":""}